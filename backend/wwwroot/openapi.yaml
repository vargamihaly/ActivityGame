openapi: 3.0.1
info:
  title: 'ActivityGameBackend.Web, Version=0.1.0.0, Culture=neutral, PublicKeyToken=null'
  version: '1.0'
paths:
  /api/Auth/register:
    post:
      tags:
        - Auth
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserResponseApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/UserResponseApiResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/Auth/me:
    get:
      tags:
        - Auth
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserResponseApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/UserResponseApiResponse'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/Auth/logout:
    post:
      tags:
        - Auth
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/Auth/username:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsernameRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SetUsernameRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SetUsernameRequest'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserResponseApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/UserResponseApiResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/GameEvents/{gameId}':
    get:
      tags:
        - GameEvents
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  /api/Games/current:
    get:
      tags:
        - Games
      responses:
        '200':
          description: OK
  '/api/Games/details/{gameId}':
    get:
      tags:
        - Games
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameResponseApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/Games/create:
    post:
      tags:
        - Games
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreateGameResponseApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGameResponseApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateGameResponseApiResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/Games/join/{gameId}':
    post:
      tags:
        - Games
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/Games/start/{gameId}':
    post:
      tags:
        - Games
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartGameResponseApiResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/Games/end-turn/{gameId}':
    post:
      tags:
        - Games
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndTurnRequest'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EndTurnResponseApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/EndTurnResponseApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EndTurnResponseApiResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/Games/leave-lobby/{gameId}':
    post:
      tags:
        - Games
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/Games/leave/{gameId}':
    post:
      tags:
        - Games
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  '/api/Games/settings/{gameId}':
    put:
      tags:
        - Games
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGameSettingsRequest'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
components:
  schemas:
    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
      additionalProperties: false
    CreateGameResponse:
      type: object
      properties:
        gameId:
          type: string
          format: uuid
      additionalProperties: false
    CreateGameResponseApiResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
        data:
          $ref: '#/components/schemas/CreateGameResponse'
      additionalProperties: false
    EndTurnRequest:
      required:
        - winnerUserId
      type: object
      properties:
        winnerUserId:
          type: string
          nullable: true
      additionalProperties: false
    EndTurnResponse:
      required:
        - isGameWon
      type: object
      properties:
        isGameWon:
          type: boolean
      additionalProperties: false
    EndTurnResponseApiResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
        data:
          $ref: '#/components/schemas/EndTurnResponse'
      additionalProperties: false
    ErrorCode:
      enum:
        - GameNotFound
        - PlayerAlreadyInGame
        - InvalidGameState
        - HostValidationFailed
        - InvalidGameSettings
        - InvalidPlayerCount
        - UserNotFound
        - UserNotAuthenticated
      type: string
    GameResponse:
      required:
        - enabledMethods
        - hostId
        - id
        - maxScore
        - players
        - status
        - timerInMinutes
      type: object
      properties:
        id:
          type: string
          format: uuid
        hostId:
          type: string
          nullable: true
        timerInMinutes:
          type: integer
          format: int32
        maxScore:
          type: integer
          format: int32
        players:
          type: array
          items:
            $ref: '#/components/schemas/PlayerResponse'
          nullable: true
        status:
          $ref: '#/components/schemas/GameStatus'
        currentRound:
          $ref: '#/components/schemas/RoundResponse'
        enabledMethods:
          type: array
          items:
            $ref: '#/components/schemas/MethodType'
          nullable: true
      additionalProperties: false
    GameResponseApiResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
        data:
          $ref: '#/components/schemas/GameResponse'
      additionalProperties: false
    GameStatus:
      enum:
        - Waiting
        - InProgress
        - Finished
      type: string
    MethodType:
      enum:
        - Drawing
        - Description
        - Mimic
      type: string
    PlayerResponse:
      required:
        - id
        - score
        - username
      type: object
      properties:
        id:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        score:
          type: integer
          format: int32
          nullable: true
        isHost:
          type: boolean
          nullable: true
      additionalProperties: false
    RoundResponse:
      required:
        - activePlayerUsername
        - methodType
        - word
      type: object
      properties:
        roundNumber:
          type: integer
          format: int32
        methodType:
          $ref: '#/components/schemas/MethodType'
        word:
          type: string
          nullable: true
        activePlayerUsername:
          type: string
          nullable: true
      additionalProperties: false
    SetUsernameRequest:
      required:
        - username
      type: object
      properties:
        username:
          type: string
          nullable: true
      additionalProperties: false
    StartGameResponse:
      required:
        - gameId
        - methodType
        - nextActivePlayer
        - nextWord
      type: object
      properties:
        gameId:
          type: string
          format: uuid
        nextActivePlayer:
          type: string
          nullable: true
        nextWord:
          type: string
          nullable: true
        methodType:
          type: string
          nullable: true
      additionalProperties: false
    StartGameResponseApiResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
        data:
          $ref: '#/components/schemas/StartGameResponse'
      additionalProperties: false
    UpdateGameSettingsRequest:
      required:
        - enabledMethods
        - maxScore
        - timer
      type: object
      properties:
        timer:
          type: integer
          format: int32
        maxScore:
          type: integer
          format: int32
        enabledMethods:
          type: array
          items:
            $ref: '#/components/schemas/MethodType'
          nullable: true
      additionalProperties: false
    UserResponse:
      required:
        - email
        - id
        - score
        - username
      type: object
      properties:
        id:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        score:
          type: integer
          format: int32
          nullable: true
        isHost:
          type: boolean
          nullable: true
      additionalProperties: false
    UserResponseApiResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
        data:
          $ref: '#/components/schemas/UserResponse'
      additionalProperties: false