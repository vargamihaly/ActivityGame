// <auto-generated />
using System;
using ActivityGameBackend.Persistence.Mssql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ActivityGameBackend.Persistence.Mssql.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ActivityGameBackend.Persistence.Mssql.Games.GameEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAtUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("EnabledMethods")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaxScore")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TimerInMinutes")
                        .HasColumnType("int");

                    b.Property<string>("WinnerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("HostId");

                    b.HasIndex("WinnerId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("ActivityGameBackend.Persistence.Mssql.Games.GamePlayerEntity", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsHost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Score")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("GameId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("GamePlayers");
                });

            modelBuilder.Entity("ActivityGameBackend.Persistence.Mssql.Rounds.RoundEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActivePlayerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("CreatedAtUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MethodType")
                        .HasColumnType("int");

                    b.Property<string>("RoundWinnerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("WordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivePlayerId");

                    b.HasIndex("GameId");

                    b.HasIndex("RoundWinnerId");

                    b.HasIndex("WordId");

                    b.ToTable("Rounds", (string)null);
                });

            modelBuilder.Entity("ActivityGameBackend.Persistence.Mssql.Users.UserEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("CreatedAtUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ActivityGameBackend.Persistence.Mssql.Words.WordEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAtUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Method")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Words", (string)null);
                });

            modelBuilder.Entity("ActivityGameBackend.Persistence.Mssql.Games.GameEntity", b =>
                {
                    b.HasOne("ActivityGameBackend.Persistence.Mssql.Users.UserEntity", "Host")
                        .WithMany()
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ActivityGameBackend.Persistence.Mssql.Users.UserEntity", "Winner")
                        .WithMany()
                        .HasForeignKey("WinnerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Host");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("ActivityGameBackend.Persistence.Mssql.Games.GamePlayerEntity", b =>
                {
                    b.HasOne("ActivityGameBackend.Persistence.Mssql.Games.GameEntity", "Game")
                        .WithMany("GamePlayers")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ActivityGameBackend.Persistence.Mssql.Users.UserEntity", "User")
                        .WithMany("GamePlayers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ActivityGameBackend.Persistence.Mssql.Rounds.RoundEntity", b =>
                {
                    b.HasOne("ActivityGameBackend.Persistence.Mssql.Users.UserEntity", "ActivePlayer")
                        .WithMany()
                        .HasForeignKey("ActivePlayerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ActivityGameBackend.Persistence.Mssql.Games.GameEntity", "Game")
                        .WithMany("Rounds")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ActivityGameBackend.Persistence.Mssql.Users.UserEntity", "RoundWinner")
                        .WithMany()
                        .HasForeignKey("RoundWinnerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ActivityGameBackend.Persistence.Mssql.Words.WordEntity", "Word")
                        .WithMany()
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ActivePlayer");

                    b.Navigation("Game");

                    b.Navigation("RoundWinner");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("ActivityGameBackend.Persistence.Mssql.Games.GameEntity", b =>
                {
                    b.Navigation("GamePlayers");

                    b.Navigation("Rounds");
                });

            modelBuilder.Entity("ActivityGameBackend.Persistence.Mssql.Users.UserEntity", b =>
                {
                    b.Navigation("GamePlayers");
                });
#pragma warning restore 612, 618
        }
    }
}
